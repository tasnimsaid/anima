/*! For license information please see awb.js.LICENSE.txt */ ! function() {
    "use strict";

    function t(t, e, a, n) {
        var i, o = !1,
            r = 0;

        function s() {
            i && clearTimeout(i)
        }

        function c() {
            for (var c = arguments.length, l = new Array(c), d = 0; d < c; d++) l[d] = arguments[d];
            var w = this,
                h = Date.now() - r;

            function g() {
                r = Date.now(), a.apply(w, l)
            }

            function b() {
                i = void 0
            }
            o || (n && !i && g(), s(), void 0 === n && h > t ? g() : !0 !== e && (i = setTimeout(n ? b : g, void 0 === n ? t - h : t)))
        }
        return "boolean" != typeof e && (n = a, a = e, e = void 0), c.cancel = function() {
            s(), o = !0
        }, c
    }
    const {
        AWBData: e
    } = window, a = window.jQuery, n = a(window), i = a(document), o = /Android|iPhone|iPad|iPod|BlackBerry|Windows Phone/g.test(navigator.userAgent || navigator.vendor || window.opera), r = !!document.documentMode, s = !r && !!window.StyleMedia, c = "undefined" != typeof InstallTrigger, l = /constructor/i.test(window.HTMLElement) || "[object SafariRemoteNotification]" === (!window.safari || "undefined" != typeof safari && safari.pushNotification).toString(), d = !!window.chrome && !!window.chrome.webstore, w = !!window.opr && !!window.opr.addons || !!window.opera || navigator.userAgent.indexOf(" OPR/") >= 0, h = a("#twentytwenty-style-css, #twenty-twenty-style-css, #twenty-twenty-one-style-css").length;
    let g = !1,
        b = !1;

    function u(t, e) {
        const a = t[0].getBoundingClientRect();
        let n = 1;
        if (0 >= a.right || a.left >= window.innerWidth) n = 0;
        else if (0 > a.bottom && a.top <= window.innerHeight) n = 0;
        else {
            const t = Math.max(0, a.height + a.top),
                e = Math.max(0, a.height - (a.top + a.height - window.innerHeight)),
                i = Math.max(0, -a.top),
                o = Math.max(0, a.top + a.height - window.innerHeight);
            a.height < window.innerHeight ? n = 1 - (i || o) / a.height : t <= window.innerHeight ? n = t / window.innerHeight : e <= window.innerHeight && (n = e / window.innerHeight), n = 0 > n ? 0 : n
        }
        return e ? [n, a] : n
    }
    e.settings && e.settings.disable_parallax && e.settings.disable_parallax.length && e.settings.disable_parallax.forEach((t => {
        if (!g) switch (t) {
            case "everywhere":
                g = !0;
                break;
            case "mobile":
                g = o;
                break;
            case "ie":
                g = r;
                break;
            case "edge":
                g = s;
                break;
            case "firefox":
                g = c;
                break;
            case "safari":
                g = l;
                break;
            case "chrome":
                g = d;
                break;
            case "opera":
                g = w
        }
    })), e.settings && e.settings.disable_video && e.settings.disable_video.length && e.settings.disable_video.forEach((t => {
        if (!b) switch (t) {
            case "everywhere":
                b = !0;
                break;
            case "mobile":
                b = o;
                break;
            case "ie":
                b = r;
                break;
            case "edge":
                b = s;
                break;
            case "firefox":
                b = c;
                break;
            case "safari":
                b = l;
                break;
            case "chrome":
                b = d;
                break;
            case "opera":
                b = w
        }
    }));
    let m, p = !1,
        f = 1;
    const v = t(200, ((t, e, n) => {
        ! function(t, e, n) {
            let i, o, r;
            p.each((function() {
                const s = a(this);
                i = s.data("awb-mouse-data"), "object" == typeof i && (i.is_in_viewport || n && f) && (n ? (o = -i.size * t, r = -i.size * e) : (o = (i.rect.width - (t - i.rect.left)) / i.rect.width, r = (i.rect.height - (e - i.rect.top)) / i.rect.height, (1 < o || 0 > o || 1 < r || 0 > r) && (o = .5, r = .5), o = i.size * (o - .5) * 2, r = i.size * (r - .5) * 2), n && f ? s.css({
                    transform: "translateX(".concat(o, "px) translateY(").concat(r, "px) translateZ(0)")
                }) : s.css({
                    transition: "transform ".concat(n ? 2 : i.speed, "s  cubic-bezier(.22, .63, .6, .88)"),
                    transform: "translateX(".concat(o, "px) translateY(").concat(r, "px) translateZ(0)")
                }))
            })), f = 0
        }(t, e, n)
    }));

    function k(t) {
        clearTimeout(m), t ? function() {
            const t = a(".nk-awb .nk-awb-wrap.nk-awb-mouse-parallax").children(".nk-awb-inner");
            t.length && (p ? p = t : (p = t, o && window.DeviceOrientationEvent ? n.on("deviceorientation", (t => {
                v(t.originalEvent.gamma / 90, t.originalEvent.beta / 180, !0)
            })) : n.on("mousemove", (t => {
                v(t.clientX, t.clientY)
            })))), p && p.each((function() {
                const t = a(this),
                    e = t.parent(),
                    n = parseFloat(e.attr("data-awb-mouse-parallax-size")) || 30,
                    i = parseFloat(e.attr("data-awb-mouse-parallax-speed")) || 1e4;
                t.data("awb-mouse-data", {
                    is_in_viewport: u(e) ? e.is(":visible") : 0,
                    rect: e[0].getBoundingClientRect(),
                    size: n,
                    speed: i / 1e3
                }), t.css({
                    left: -n,
                    right: -n,
                    top: -n,
                    bottom: -n
                })
            }))
        }() : m = setTimeout(m, 100)
    }

    function x() {
        a(".nk-awb:not(.wpb_column)").children('.nk-awb-wrap[data-awb-stretch="true"]').each((function() {
            const t = a(this),
                e = this.getBoundingClientRect(),
                {
                    left: n
                } = e,
                i = window.innerWidth - e.right,
                o = parseFloat(t.css("margin-left") || 0),
                r = parseFloat(t.css("margin-right") || 0);
            t.css({
                "margin-left": o - n,
                "margin-right": r - i
            })
        })), a(".nk-awb.wpb_column").children('.nk-awb-wrap[data-awb-stretch="true"]').each((function() {
            const t = a(this),
                e = t.closest(".vc_row"),
                n = t.closest(".wpb_column"),
                i = this.getBoundingClientRect(),
                o = e[0].getBoundingClientRect(),
                r = n[0].getBoundingClientRect(),
                s = i.left,
                c = window.innerWidth - i.right,
                l = o.left + (parseFloat(e.css("padding-left")) || 0),
                d = window.innerWidth - o.right + (parseFloat(e.css("padding-right")) || 0),
                w = r.left,
                h = window.innerWidth - r.right,
                g = {
                    "margin-left": 0,
                    "margin-right": 0
                };
            if (Math.round(l) === Math.round(w)) {
                const e = parseFloat(t.css("margin-left") || 0);
                g["margin-left"] = e - s
            }
            if (Math.round(d) === Math.round(h)) {
                const e = parseFloat(t.css("margin-right") || 0);
                g["margin-right"] = e - c
            }
            t.css(g)
        })), e.settings.full_width_fallback && a(".nk-awb.alignfull").each((function() {
            const t = a(this).children(".nk-awb-wrap");
            if (!t[0]) return;
            const e = t[0].getBoundingClientRect(),
                {
                    left: n
                } = e,
                i = window.innerWidth - e.right,
                {
                    bottom: o
                } = e,
                r = parseFloat(t.css("margin-left") || 0),
                s = parseFloat(t.css("margin-right") || 0),
                c = parseFloat(t.css("margin-bottom") || 0);
            let l = r - n,
                d = s - i,
                w = "";
            if (t.closest(".ghostkit-col").length) {
                const e = t.closest(".ghostkit-grid"),
                    a = t.closest(".ghostkit-col"),
                    h = e[0].getBoundingClientRect(),
                    g = a[0].getBoundingClientRect(),
                    b = h.left,
                    u = window.innerWidth - h.right,
                    m = g.left,
                    p = window.innerWidth - g.right,
                    f = g.bottom;
                Math.round(b) !== Math.round(m) && (l = m - n + r), Math.round(u) !== Math.round(p) && (d = p - i + s), w = c - (f - o)
            }
            t.css({
                "margin-left": l,
                "margin-right": d,
                "margin-bottom": w
            })
        }))
    }

    function y() {
        a(".nk-awb .nk-awb-inner img").each((function() {
            if (!a(this)[0]) return;
            const t = window.getComputedStyle(this, null);
            if (t && t.objectFit && "cover" === t.objectFit) {
                const t = parseInt(this.getAttribute("height"), 10),
                    e = parseInt(this.getAttribute("width"), 10);
                if (t) {
                    let a = this.clientWidth;
                    e / t > this.clientWidth / this.clientHeight && (a = parseInt(this.clientHeight * e / t, 10)), this.setAttribute("sizes", "".concat(a, "px"))
                }
            }
        }))
    }
    n.on("resize scroll orientationchange load", k), setInterval(k, 3e3);
    let _ = "";
    i.on("jetpack-lazy-loaded-image", ".jarallax-img", (t => {
        const e = a(t.target).parent().parent();
        e[0].jarallax && e[0].jarallax.image && e[0].jarallax.image.$item && (e[0].jarallax.image.$item = t.target)
    })), window.nkAwbInit = function() {
        const t = a(".nk-awb .nk-awb-wrap[data-awb-mouse-parallax-size]:not(.nk-awb-mouse-parallax)");
        t.length && (t.addClass("nk-awb-mouse-parallax"), k(!0)), a(".nk-awb-after-vc_row").each((function() {
                const t = a(this);
                let e = t.prev(".vc_clearfix");
                e = !!e.length && e;
                const n = (e || t).prev(".vc_row:not(.nk-awb)");
                if (n.length) {
                    const e = t.children(".nk-awb-wrap");
                    n.is("[data-vc-full-width=true]") && e.removeAttr("data-awb-stretch"), n.addClass("nk-awb"), n.append(e)
                }
                t.remove()
            })), a(".nk-awb-after-vc_column").each((function() {
                const t = a(this),
                    e = t.prev(".wpb_column:not(.nk-awb)"),
                    n = e.closest(".vc_row");
                if (e.length) {
                    const a = t.children(".nk-awb-wrap");
                    n.is("[data-vc-stretch-content=true]") && a.removeAttr("data-awb-stretch"), e.addClass("nk-awb"), e.append(a)
                }
                t.remove()
            })),
            function() {
                if (window.GHOSTKIT) return;
                const t = a(".nk-awb[data-ghostkit-styles]");
                if (t.length) {
                    t.each((function() {
                        _ += a(this).attr("data-ghostkit-styles"), a(this).removeAttr("data-ghostkit-styles")
                    }));
                    let e = a("#ghostkit-awb-custom-css-inline-css");
                    e.length || (e = a('<style id="ghostkit-awb-custom-css-inline-css">').appendTo("head")), e.html(_)
                }
            }(), x(), y(), void 0 !== a.fn.jarallax && a(".nk-awb .nk-awb-wrap:not(.nk-awb-rendered)").each((function() {
                const t = a(this).addClass("nk-awb-rendered"),
                    e = t.attr("data-awb-type"),
                    n = t.attr("data-awb-image-background-size"),
                    i = t.attr("data-awb-image-background-position");
                let r = !1,
                    s = 0,
                    c = 0,
                    l = 0,
                    d = !0,
                    w = !0,
                    u = !1,
                    m = t.attr("data-awb-parallax"),
                    p = t.attr("data-awb-parallax-speed"),
                    f = "true" === t.attr("data-awb-parallax-mobile") || "1" === t.attr("data-awb-parallax-mobile");
                if ("yt_vm_video" !== e && "video" !== e || (r = t.attr("data-awb-video"), s = parseFloat(t.attr("data-awb-video-start-time")) || 0, c = parseFloat(t.attr("data-awb-video-end-time")) || 0, l = parseFloat(t.attr("data-awb-video-volume")) || 0, d = "false" !== t.attr("data-awb-video-loop"), w = "true" === t.attr("data-awb-video-always-play"), u = "1" === t.attr("data-awb-video-mobile") || "true" === t.attr("data-awb-video-mobile"), !r || m || p || (m = "scroll", p = 1, f = u)), !m && !r) {
                    const e = t.attr("data-awb-image-background-size") || "cover",
                        a = t.attr("data-awb-image-background-position") || "50% 50%";
                    return void t.find(".jarallax-img").css({
                        objectFit: e,
                        objectPosition: a
                    })
                }
                const v = {
                    type: m,
                    speed: p,
                    disableParallax: () => g || !f && o,
                    disableVideo: () => b || !u && o,
                    imgSize: n || "cover",
                    imgPosition: i || "50% 50%"
                };
                "pattern" === n && (v.imgSize = "auto", v.imgRepeat = "repeat"), r && (v.speed = m ? p : 1, v.videoSrc = r, v.videoStartTime = s, v.videoEndTime = c, v.videoVolume = l, v.videoLoop = d, v.videoPlayOnlyVisible = !w);
                const k = t.children(".nk-awb-inner"),
                    x = k.find("picture .jarallax-img");
                x.length && (x.removeClass("jarallax-img"), x.closest("picture").addClass("jarallax-img")), h && (v.onInit = function() {
                    k.children().addClass("intrinsic-ignore")
                }), k.jarallax(v)
            }))
    }, window.nkAwbInit();
    const j = t(200, (() => {
        window.nkAwbInit()
    }));
    window.MutationObserver ? new window.MutationObserver(j).observe(document.documentElement, {
        childList: !0,
        subtree: !0
    }) : a(document).on("DOMContentLoaded DOMNodeInserted load", (() => {
        j()
    })), n.on("resize orientationchange load", t(200, x)), n.on("resize orientationchange load", t(200, y))
}();