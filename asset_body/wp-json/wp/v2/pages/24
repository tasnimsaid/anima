{"id":24,"date":"2022-02-14T10:19:40","date_gmt":"2022-02-14T10:19:40","guid":{"rendered":"https:\/\/divi.almostinevitable.net\/?page_id=24"},"modified":"2022-02-14T15:47:34","modified_gmt":"2022-02-14T15:47:34","slug":"adding-codepen","status":"publish","type":"page","link":"https:\/\/divi.almostinevitable.net\/adding-codepen\/","title":{"rendered":"Adding Codepen"},"content":{"rendered":"<p>[et_pb_section fb_built=&#8221;1&#8243; fullwidth=&#8221;on&#8221; _builder_version=&#8221;4.14.7&#8243; _module_preset=&#8221;default&#8221; global_colors_info=&#8221;{}&#8221;][et_pb_fullwidth_code _builder_version=&#8221;4.14.7&#8243; _module_preset=&#8221;default&#8221; global_colors_info=&#8221;{}&#8221;]<\/p>\n<div id=\"panel\"><!-- [et_pb_line_break_holder] -->  <canvas id=\"magic-dust\"><\/canvas><!-- [et_pb_line_break_holder] --><\/div>\n<p><!-- [et_pb_line_break_holder] --><\/p>\n<style><!-- [et_pb_line_break_holder] -->#panel {<!-- [et_pb_line_break_holder] -->  width: 100%;<!-- [et_pb_line_break_holder] -->  height: 100vh;<!-- [et_pb_line_break_holder] -->  background-color: #000;<!-- [et_pb_line_break_holder] -->}<!-- [et_pb_line_break_holder] --><\/style>\n<p><!-- [et_pb_line_break_holder] --><script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/gsap\/3.9.1\/gsap.min.js\"><\/script><!-- [et_pb_line_break_holder] --><script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery\/3.6.0\/jquery.min.js\"><\/script><!-- [et_pb_line_break_holder] --><!-- [et_pb_line_break_holder] --><script><!-- [et_pb_line_break_holder] -->    var end_panel = document.querySelector(\"#panel\");<!-- [et_pb_line_break_holder] -->    var end_cv = document.getElementById(\"magic-dust\");<!-- [et_pb_line_break_holder] -->    var end_ctx = end_cv.getContext(\"2d\");<!-- [et_pb_line_break_holder] -->    var end_cvWidth = parseInt(window.getComputedStyle(end_panel).width, 10); \/\/ get width without \"px\"<!-- [et_pb_line_break_holder] -->    var end_cvHeight = parseInt(window.getComputedStyle(end_panel).height, 10); \/\/ get height without \"px\"<!-- [et_pb_line_break_holder] -->    var resolution = window.devicePixelRatio || 1;<!-- [et_pb_line_break_holder] -->    var sprites = [];<!-- [et_pb_line_break_holder] -->    var toRad = Math.PI \/ 180;<!-- [et_pb_line_break_holder] -->    var fx_tl;<!-- [et_pb_line_break_holder] --><!-- [et_pb_line_break_holder] -->    \/\/ resize for retina<!-- [et_pb_line_break_holder] -->    resizeCv();<!-- [et_pb_line_break_holder] -->    function start_fx() {<!-- [et_pb_line_break_holder] -->        \/\/ particles<!-- [et_pb_line_break_holder] -->        init_fx(<!-- [et_pb_line_break_holder] -->            \"circle\",         \/\/ texture<!-- [et_pb_line_break_holder] -->            1777,               \/\/ total sprites<!-- [et_pb_line_break_holder] -->            50,50, 50,50,     \/\/ width-+, height-+<!-- [et_pb_line_break_holder] -->            0,1600, 0,1600,   \/\/ start position x-+, y-+<!-- [et_pb_line_break_holder] -->            4,12, 0,360,      \/\/ velocity-+, angle-+<!-- [et_pb_line_break_holder] -->            .1,2.5, .2,.8,  \/\/ scale start-+, end-+<!-- [et_pb_line_break_holder] -->            360, 0,0,         \/\/ rotation start, end-+<!-- [et_pb_line_break_holder] -->            1.7,24,             \/\/ duration-+<!-- [et_pb_line_break_holder] -->            .1, 2,            \/\/ fade in, out duration<!-- [et_pb_line_break_holder] -->            0.1,              \/\/ gravity<!-- [et_pb_line_break_holder] -->            12,             \/\/ delay+ inbetween sprites<!-- [et_pb_line_break_holder] -->            -1,               \/\/ repeat sprite animation (-1 = infinite)<!-- [et_pb_line_break_holder] -->            0                 \/\/ delay timeline<!-- [et_pb_line_break_holder] -->        );<!-- [et_pb_line_break_holder] -->    }<!-- [et_pb_line_break_holder] -->$(document).mousemove(function(e) {<!-- [et_pb_line_break_holder] -->        var x = e.pageX;<!-- [et_pb_line_break_holder] -->        var y = e.pageY;<!-- [et_pb_line_break_holder] -->        var scrollPosition = $(window).scrollTop()<!-- [et_pb_line_break_holder] -->        createMagicDust(x,y-scrollPosition,5)<!-- [et_pb_line_break_holder] -->    });<!-- [et_pb_line_break_holder] --><!-- [et_pb_line_break_holder] -->    function init_fx(textureSpr, totalSpr, minWidth,maxWidth, minHeight,maxHeight, xMin,xMax, yMin,yMax, veloMin,veloMax, angleMin,angleMax, startScaleMin,startScaleMax, endScaleMin,endScaleMax, rotStart, rotEndMin,rotEndMax, minDur,maxDur, fadeInDur, fadeOutDur, gravitySpr, delaySpr, repeatSpr, delayTl) {<!-- [et_pb_line_break_holder] -->        \/\/ generate sprites<!-- [et_pb_line_break_holder] -->        for (var i = 0; i < totalSpr; i++) {<!-- [et_pb_line_break_holder] -->            var widthSpr = randomInt(minWidth, maxWidth);<!-- [et_pb_line_break_holder] -->            var heightSpr = randomInt(minHeight, maxHeight);<!-- [et_pb_line_break_holder] -->            \/\/ define texture<!-- [et_pb_line_break_holder] -->            var texture = createShape(textureSpr, i);<!-- [et_pb_line_break_holder] -->            sprites.push(createSprite());<!-- [et_pb_line_break_holder] -->        }<!-- [et_pb_line_break_holder] --><!-- [et_pb_line_break_holder] -->        createMagicDust = (x,y,n) => {<!-- [et_pb_line_break_holder] -->            for (var i = 0; i < n; i++) {<!-- [et_pb_line_break_holder] -->                var texture = createShape(textureSpr, Math.floor(Math.random()*10));<!-- [et_pb_line_break_holder] -->                sprites.push(createSprite(x,y,2));<!-- [et_pb_line_break_holder] -->            }<!-- [et_pb_line_break_holder] -->        };<!-- [et_pb_line_break_holder] --><!-- [et_pb_line_break_holder] -->        \/\/ start rendering animation<!-- [et_pb_line_break_holder] -->        gsap.ticker.add(renderCv);<!-- [et_pb_line_break_holder] -->        gsap.registerPlugin(Physics2DPlugin);<!-- [et_pb_line_break_holder] -->        function createSprite(x,y,t) {<!-- [et_pb_line_break_holder] -->            var width  = (texture.naturalWidth  || texture.width  || 0) \/ resolution;<!-- [et_pb_line_break_holder] -->            var height = (texture.naturalHeight || texture.height || 0) \/ resolution;<!-- [et_pb_line_break_holder] -->            var duration = t || randomNr(minDur, maxDur);<!-- [et_pb_line_break_holder] -->            \/\/ limit angle if needed<!-- [et_pb_line_break_holder] -->            var angleNr;<!-- [et_pb_line_break_holder] -->            if (angleMin == -90 && angleMax == -270) {<!-- [et_pb_line_break_holder] -->                angleNr = Math.random() < 0.5 ? 90 : 270; \/\/ only up or down<!-- [et_pb_line_break_holder] -->            } else if (angleMin == -0 && angleMax == -180)  {<!-- [et_pb_line_break_holder] -->                angleNr = Math.random() < 0.5 ? 0 : 180; \/\/ only left or right<!-- [et_pb_line_break_holder] -->            } else {<!-- [et_pb_line_break_holder] -->                angleNr = randomNr(angleMin, angleMax);<!-- [et_pb_line_break_holder] -->            }<!-- [et_pb_line_break_holder] -->            \/\/ create a new timeline for the sprite<!-- [et_pb_line_break_holder] -->            fx_tl = gsap.timeline({<!-- [et_pb_line_break_holder] -->                delay: t ? 0 : randomNr(delaySpr),<!-- [et_pb_line_break_holder] -->                repeat: t ? 0 : repeatSpr,<!-- [et_pb_line_break_holder] -->                repeatDelay: randomNr(1)<!-- [et_pb_line_break_holder] -->            });<!-- [et_pb_line_break_holder] -->            \/\/ sprite object default properites<!-- [et_pb_line_break_holder] -->            var sprite = {<!-- [et_pb_line_break_holder] -->                animation: fx_tl,<!-- [et_pb_line_break_holder] -->                texture: texture,<!-- [et_pb_line_break_holder] -->                width: width,<!-- [et_pb_line_break_holder] -->                height: height,<!-- [et_pb_line_break_holder] -->                alpha: 0,<!-- [et_pb_line_break_holder] -->                rotation: randomNr(rotStart),<!-- [et_pb_line_break_holder] -->                scale: randomNr(startScaleMin, startScaleMax),<!-- [et_pb_line_break_holder] -->                originX: t ? .2 : 0.5,<!-- [et_pb_line_break_holder] -->                originY: t ? .3 : 0.5,<!-- [et_pb_line_break_holder] -->                x: x || randomNr(xMin, xMax),<!-- [et_pb_line_break_holder] -->                y: y || randomNr(yMin, yMax),<!-- [et_pb_line_break_holder] -->            };<!-- [et_pb_line_break_holder] --><!-- [et_pb_line_break_holder] -->            \/\/ animate to<!-- [et_pb_line_break_holder] -->            fx_tl.add(\"start\", delayTl)<!-- [et_pb_line_break_holder] -->                .to(sprite, t ? 0.3 : fadeInDur, {alpha: 1, ease:Power0.easeIn}, \"start\")<!-- [et_pb_line_break_holder] -->                .to(sprite, duration, {<!-- [et_pb_line_break_holder] -->                    rotation: 180 * randomNr(rotEndMin, rotEndMax),<!-- [et_pb_line_break_holder] -->                    scale: randomNr(endScaleMin, endScaleMax),<!-- [et_pb_line_break_holder] -->                    physics2D: {<!-- [et_pb_line_break_holder] -->                        velocity: randomNr(veloMin, veloMax),<!-- [et_pb_line_break_holder] -->                        angle: angleNr,<!-- [et_pb_line_break_holder] -->                        gravity: gravitySpr,<!-- [et_pb_line_break_holder] -->                    }<!-- [et_pb_line_break_holder] -->                }, \"start\")<!-- [et_pb_line_break_holder] -->                \/\/ fade out<!-- [et_pb_line_break_holder] -->                .to(sprite, t ? 1.5 : fadeOutDur, {<!-- [et_pb_line_break_holder] -->                    alpha: 0,<!-- [et_pb_line_break_holder] -->                    delay: t ? 1.5 : duration-fadeOutDur<!-- [et_pb_line_break_holder] -->                }, 0);<!-- [et_pb_line_break_holder] --><!-- [et_pb_line_break_holder] -->            return sprite;<!-- [et_pb_line_break_holder] -->        }<!-- [et_pb_line_break_holder] --><!-- [et_pb_line_break_holder] -->        function createShape(textureSpr, i) {<!-- [et_pb_line_break_holder] -->            \/\/ Create offscreen canvas<!-- [et_pb_line_break_holder] -->            var canvas = document.createElement(\"canvas\");<!-- [et_pb_line_break_holder] -->            var context = canvas.getContext(\"2d\");<!-- [et_pb_line_break_holder] -->            canvas.width = widthSpr * resolution;<!-- [et_pb_line_break_holder] -->            canvas.height = heightSpr * resolution;<!-- [et_pb_line_break_holder] -->            var radius = widthSpr \/ 2;<!-- [et_pb_line_break_holder] -->            var gradient = context.createRadialGradient(radius, radius, 0, radius, radius, radius);<!-- [et_pb_line_break_holder] -->            if (i % 3 === 0){<!-- [et_pb_line_break_holder] -->                gradient.addColorStop(0, \"rgba(177,255,252,0.75)\");<!-- [et_pb_line_break_holder] -->                gradient.addColorStop(0.15, \"rgba(177,255,252,0.1)\");<!-- [et_pb_line_break_holder] -->            } else if (i % 5 === 0){<!-- [et_pb_line_break_holder] -->                gradient.addColorStop(0, \"rgba(202,76,255,0.6)\");<!-- [et_pb_line_break_holder] -->                gradient.addColorStop(0.1,  \"rgba(202,76,255,0.1)\");<!-- [et_pb_line_break_holder] -->            } else {<!-- [et_pb_line_break_holder] -->                gradient.addColorStop(0, \"rgba(102,219,214,0.6)\");<!-- [et_pb_line_break_holder] -->                gradient.addColorStop(0.1,  \"rgba(102,219,214,0.1)\");<!-- [et_pb_line_break_holder] -->            }<!-- [et_pb_line_break_holder] -->            gradient.addColorStop(0.65, \"rgba(0,0,0,0)\");<!-- [et_pb_line_break_holder] -->            context.fillStyle = gradient;<!-- [et_pb_line_break_holder] -->            context.fillRect(0, 0, widthSpr, heightSpr);<!-- [et_pb_line_break_holder] -->                return canvas;<!-- [et_pb_line_break_holder] -->        }<!-- [et_pb_line_break_holder] -->    }<!-- [et_pb_line_break_holder] --><!-- [et_pb_line_break_holder] -->    function renderCv() {<!-- [et_pb_line_break_holder] -->        end_ctx.clearRect(0, 0, end_cvWidth, end_cvHeight);<!-- [et_pb_line_break_holder] -->        for (var i = 0; i < sprites.length; i++) {<!-- [et_pb_line_break_holder] -->            var sprite = sprites[i];<!-- [et_pb_line_break_holder] -->            \/\/ Skip rendering sprite if it has no alpha<!-- [et_pb_line_break_holder] -->            if (!sprite.alpha) {<!-- [et_pb_line_break_holder] -->                continue;<!-- [et_pb_line_break_holder] -->            }<!-- [et_pb_line_break_holder] -->            end_ctx.save();<!-- [et_pb_line_break_holder] -->            var offsetX = sprite.originX * sprite.width;<!-- [et_pb_line_break_holder] -->            var offsetY = sprite.originY * sprite.height;<!-- [et_pb_line_break_holder] -->            end_ctx.translate(sprite.x + offsetX, sprite.y + offsetY);<!-- [et_pb_line_break_holder] -->            end_ctx.rotate(sprite.rotation * toRad);<!-- [et_pb_line_break_holder] -->            end_ctx.scale(sprite.scale, sprite.scale);<!-- [et_pb_line_break_holder] -->            end_ctx.globalAlpha = sprite.alpha;<!-- [et_pb_line_break_holder] -->            end_ctx.drawImage(sprite.texture, -offsetX, -offsetY);<!-- [et_pb_line_break_holder] -->            end_ctx.restore();<!-- [et_pb_line_break_holder] -->        }<!-- [et_pb_line_break_holder] -->    }<!-- [et_pb_line_break_holder] --><!-- [et_pb_line_break_holder] -->    function resizeCv() {<!-- [et_pb_line_break_holder] -->        end_cv.width  = end_cvWidth * resolution;<!-- [et_pb_line_break_holder] -->        end_cv.height = end_cvHeight * resolution;<!-- [et_pb_line_break_holder] -->        end_cv.style.width  = end_cvWidth + \"px\";<!-- [et_pb_line_break_holder] -->        end_cv.style.height = end_cvHeight + \"px\";<!-- [et_pb_line_break_holder] -->        end_ctx.scale(resolution, resolution);<!-- [et_pb_line_break_holder] -->    }<!-- [et_pb_line_break_holder] --><!-- [et_pb_line_break_holder] -->    function randomNr(min, max) {<!-- [et_pb_line_break_holder] -->        if (max === undefined) { max = min; min = 0; }<!-- [et_pb_line_break_holder] -->        if (min > max) { var tmp = min; min = max; max = tmp; }<!-- [et_pb_line_break_holder] -->        return min + (max - min) * Math.random();<!-- [et_pb_line_break_holder] -->    }<!-- [et_pb_line_break_holder] --><!-- [et_pb_line_break_holder] -->    function randomInt(min, max) {<!-- [et_pb_line_break_holder] -->        if (max === undefined) { max = min; min = 0; }<!-- [et_pb_line_break_holder] -->        if (min > max) { var tmp = min; min = max; max = tmp; }<!-- [et_pb_line_break_holder] -->        return Math.floor(min + (max - min + 1) * Math.random());<!-- [et_pb_line_break_holder] -->    }<!-- [et_pb_line_break_holder] -->    start_fx();<!-- [et_pb_line_break_holder] --><\/script>[\/et_pb_fullwidth_code][\/et_pb_section][et_pb_section fb_built=&#8221;1&#8243; _builder_version=&#8221;4.14.7&#8243; _module_preset=&#8221;default&#8221; global_colors_info=&#8221;{}&#8221;][et_pb_row _builder_version=&#8221;4.14.7&#8243; _module_preset=&#8221;default&#8221; global_colors_info=&#8221;{}&#8221;][et_pb_column type=&#8221;4_4&#8243; _builder_version=&#8221;4.14.7&#8243; _module_preset=&#8221;default&#8221; global_colors_info=&#8221;{}&#8221;][et_pb_text _builder_version=&#8221;4.14.7&#8243; _module_preset=&#8221;default&#8221; text_font=&#8221;Work Sans||||||||&#8221; text_font_size=&#8221;1rem&#8221; header_font=&#8221;Bebas Neue|700|||||||&#8221; header_font_size=&#8221;2rem&#8221; hover_enabled=&#8221;0&#8243; global_colors_info=&#8221;{}&#8221; sticky_enabled=&#8221;0&#8243;]<\/p>\n<h1>Adding Codepens to Divi.<\/h1>\n<p>Check the inspector, this is totally a Divi page.<\/p>\n<p>[\/et_pb_text][\/et_pb_column][\/et_pb_row][\/et_pb_section]<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Adding Codepens to Divi. Check the inspector, this is totally a Divi page.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"page-template-blank.php","meta":{"_et_pb_use_builder":"on","_et_pb_old_content":"","_et_gb_content_width":""},"_links":{"self":[{"href":"https:\/\/divi.almostinevitable.net\/wp-json\/wp\/v2\/pages\/24"}],"collection":[{"href":"https:\/\/divi.almostinevitable.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/divi.almostinevitable.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/divi.almostinevitable.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/divi.almostinevitable.net\/wp-json\/wp\/v2\/comments?post=24"}],"version-history":[{"count":13,"href":"https:\/\/divi.almostinevitable.net\/wp-json\/wp\/v2\/pages\/24\/revisions"}],"predecessor-version":[{"id":42,"href":"https:\/\/divi.almostinevitable.net\/wp-json\/wp\/v2\/pages\/24\/revisions\/42"}],"wp:attachment":[{"href":"https:\/\/divi.almostinevitable.net\/wp-json\/wp\/v2\/media?parent=24"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}